//! NOTE: this file is autogenerated, DO NOT MODIFY
//--------------------------------------------------------------------------------
// Section: Constants (0)
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Section: Types (0)
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Section: Functions (3)
//--------------------------------------------------------------------------------
pub extern "WSClient" fn CheckDeveloperLicense(
    pExpiration: *FILETIME,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "WSClient" fn AcquireDeveloperLicense(
    hwndParent: HWND,
    pExpiration: *FILETIME,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "WSClient" fn RemoveDeveloperLicense(
    hwndParent: HWND,
) callconv(@import("std").os.windows.WINAPI) HRESULT;


//--------------------------------------------------------------------------------
// Section: Unicode Aliases (0)
//--------------------------------------------------------------------------------
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    .unspecified => if (@import("builtin").is_test) struct {
    } else struct {
    },
};
//--------------------------------------------------------------------------------
// Section: Imports (3)
//--------------------------------------------------------------------------------
const FILETIME = @import("windows_programming.zig").FILETIME;
const HWND = @import("windows_and_messaging.zig").HWND;
const HRESULT = @import("com.zig").HRESULT;

test {
    @setEvalBranchQuota(
        @import("std").meta.declarations(@This()).len * 3
    );

    // reference all the pub declarations
    if (!@import("std").builtin.is_test) return;
    inline for (@import("std").meta.declarations(@This())) |decl| {
        if (decl.is_pub) {
            _ = decl;
        }
    }
}
