//! NOTE: this file is autogenerated, DO NOT MODIFY
//--------------------------------------------------------------------------------
// Section: Constants (0)
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Section: Types (3)
//--------------------------------------------------------------------------------
pub const GameUICompletionRoutine = fn(
    returnCode: HRESULT,
    context: *c_void,
) callconv(@import("std").os.windows.WINAPI) void;

pub const PlayerPickerUICompletionRoutine = fn(
    returnCode: HRESULT,
    context: *c_void,
    selectedXuids: [*]const HSTRING,
    selectedXuidsCount: usize,
) callconv(@import("std").os.windows.WINAPI) void;

pub const KnownGamingPrivileges = extern enum(i32) {
    BROADCAST = 190,
    VIEW_FRIENDS_LIST = 197,
    GAME_DVR = 198,
    SHARE_KINECT_CONTENT = 199,
    MULTIPLAYER_PARTIES = 203,
    COMMUNICATION_VOICE_INGAME = 205,
    COMMUNICATION_VOICE_SKYPE = 206,
    CLOUD_GAMING_MANAGE_SESSION = 207,
    CLOUD_GAMING_JOIN_SESSION = 208,
    CLOUD_SAVED_GAMES = 209,
    SHARE_CONTENT = 211,
    PREMIUM_CONTENT = 214,
    SUBSCRIPTION_CONTENT = 219,
    SOCIAL_NETWORK_SHARING = 220,
    PREMIUM_VIDEO = 224,
    VIDEO_COMMUNICATIONS = 235,
    PURCHASE_CONTENT = 245,
    USER_CREATED_CONTENT = 247,
    PROFILE_VIEWING = 249,
    COMMUNICATIONS = 252,
    MULTIPLAYER_SESSIONS = 254,
    ADD_FRIEND = 255,
};
pub const XPRIVILEGE_BROADCAST = KnownGamingPrivileges.BROADCAST;
pub const XPRIVILEGE_VIEW_FRIENDS_LIST = KnownGamingPrivileges.VIEW_FRIENDS_LIST;
pub const XPRIVILEGE_GAME_DVR = KnownGamingPrivileges.GAME_DVR;
pub const XPRIVILEGE_SHARE_KINECT_CONTENT = KnownGamingPrivileges.SHARE_KINECT_CONTENT;
pub const XPRIVILEGE_MULTIPLAYER_PARTIES = KnownGamingPrivileges.MULTIPLAYER_PARTIES;
pub const XPRIVILEGE_COMMUNICATION_VOICE_INGAME = KnownGamingPrivileges.COMMUNICATION_VOICE_INGAME;
pub const XPRIVILEGE_COMMUNICATION_VOICE_SKYPE = KnownGamingPrivileges.COMMUNICATION_VOICE_SKYPE;
pub const XPRIVILEGE_CLOUD_GAMING_MANAGE_SESSION = KnownGamingPrivileges.CLOUD_GAMING_MANAGE_SESSION;
pub const XPRIVILEGE_CLOUD_GAMING_JOIN_SESSION = KnownGamingPrivileges.CLOUD_GAMING_JOIN_SESSION;
pub const XPRIVILEGE_CLOUD_SAVED_GAMES = KnownGamingPrivileges.CLOUD_SAVED_GAMES;
pub const XPRIVILEGE_SHARE_CONTENT = KnownGamingPrivileges.SHARE_CONTENT;
pub const XPRIVILEGE_PREMIUM_CONTENT = KnownGamingPrivileges.PREMIUM_CONTENT;
pub const XPRIVILEGE_SUBSCRIPTION_CONTENT = KnownGamingPrivileges.SUBSCRIPTION_CONTENT;
pub const XPRIVILEGE_SOCIAL_NETWORK_SHARING = KnownGamingPrivileges.SOCIAL_NETWORK_SHARING;
pub const XPRIVILEGE_PREMIUM_VIDEO = KnownGamingPrivileges.PREMIUM_VIDEO;
pub const XPRIVILEGE_VIDEO_COMMUNICATIONS = KnownGamingPrivileges.VIDEO_COMMUNICATIONS;
pub const XPRIVILEGE_PURCHASE_CONTENT = KnownGamingPrivileges.PURCHASE_CONTENT;
pub const XPRIVILEGE_USER_CREATED_CONTENT = KnownGamingPrivileges.USER_CREATED_CONTENT;
pub const XPRIVILEGE_PROFILE_VIEWING = KnownGamingPrivileges.PROFILE_VIEWING;
pub const XPRIVILEGE_COMMUNICATIONS = KnownGamingPrivileges.COMMUNICATIONS;
pub const XPRIVILEGE_MULTIPLAYER_SESSIONS = KnownGamingPrivileges.MULTIPLAYER_SESSIONS;
pub const XPRIVILEGE_ADD_FRIEND = KnownGamingPrivileges.ADD_FRIEND;


//--------------------------------------------------------------------------------
// Section: Functions (26)
//--------------------------------------------------------------------------------
pub extern "api-ms-win-gaming-tcui-l1-1-0" fn ShowGameInviteUI(
    serviceConfigurationId: HSTRING,
    sessionTemplateName: HSTRING,
    sessionId: HSTRING,
    invitationDisplayText: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-0" fn ShowPlayerPickerUI(
    promptDisplayText: HSTRING,
    xuids: [*]const HSTRING,
    xuidsCount: usize,
    preSelectedXuids: ?[*]const HSTRING,
    preSelectedXuidsCount: usize,
    minSelectionCount: usize,
    maxSelectionCount: usize,
    completionRoutine: PlayerPickerUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-0" fn ShowProfileCardUI(
    targetUserXuid: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-0" fn ShowChangeFriendRelationshipUI(
    targetUserXuid: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-0" fn ShowTitleAchievementsUI(
    titleId: u32,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-0" fn ProcessPendingGameUI(
    waitForCompletion: BOOL,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-0" fn TryCancelPendingGameUI(
) callconv(@import("std").os.windows.WINAPI) BOOL;

pub extern "api-ms-win-gaming-tcui-l1-1-1" fn CheckGamingPrivilegeWithUI(
    privilegeId: u32,
    scope: HSTRING,
    policy: HSTRING,
    friendlyMessage: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-1" fn CheckGamingPrivilegeSilently(
    privilegeId: u32,
    scope: HSTRING,
    policy: HSTRING,
    hasPrivilege: *BOOL,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-2" fn ShowGameInviteUIForUser(
    user: *IInspectable,
    serviceConfigurationId: HSTRING,
    sessionTemplateName: HSTRING,
    sessionId: HSTRING,
    invitationDisplayText: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-2" fn ShowPlayerPickerUIForUser(
    user: *IInspectable,
    promptDisplayText: HSTRING,
    xuids: [*]const HSTRING,
    xuidsCount: usize,
    preSelectedXuids: ?[*]const HSTRING,
    preSelectedXuidsCount: usize,
    minSelectionCount: usize,
    maxSelectionCount: usize,
    completionRoutine: PlayerPickerUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-2" fn ShowProfileCardUIForUser(
    user: *IInspectable,
    targetUserXuid: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-2" fn ShowChangeFriendRelationshipUIForUser(
    user: *IInspectable,
    targetUserXuid: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-2" fn ShowTitleAchievementsUIForUser(
    user: *IInspectable,
    titleId: u32,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-2" fn CheckGamingPrivilegeWithUIForUser(
    user: *IInspectable,
    privilegeId: u32,
    scope: HSTRING,
    policy: HSTRING,
    friendlyMessage: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-2" fn CheckGamingPrivilegeSilentlyForUser(
    user: *IInspectable,
    privilegeId: u32,
    scope: HSTRING,
    policy: HSTRING,
    hasPrivilege: *BOOL,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-3" fn ShowGameInviteUIWithContext(
    serviceConfigurationId: HSTRING,
    sessionTemplateName: HSTRING,
    sessionId: HSTRING,
    invitationDisplayText: HSTRING,
    customActivationContext: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-3" fn ShowGameInviteUIWithContextForUser(
    user: *IInspectable,
    serviceConfigurationId: HSTRING,
    sessionTemplateName: HSTRING,
    sessionId: HSTRING,
    invitationDisplayText: HSTRING,
    customActivationContext: HSTRING,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowGameInfoUI(
    titleId: u32,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowGameInfoUIForUser(
    user: *IInspectable,
    titleId: u32,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowFindFriendsUI(
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowFindFriendsUIForUser(
    user: *IInspectable,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowCustomizeUserProfileUI(
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowCustomizeUserProfileUIForUser(
    user: *IInspectable,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowUserSettingsUI(
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

pub extern "api-ms-win-gaming-tcui-l1-1-4" fn ShowUserSettingsUIForUser(
    user: *IInspectable,
    completionRoutine: GameUICompletionRoutine,
    context: ?*c_void,
) callconv(@import("std").os.windows.WINAPI) HRESULT;


//--------------------------------------------------------------------------------
// Section: Unicode Aliases (0)
//--------------------------------------------------------------------------------
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    .unspecified => if (@import("builtin").is_test) struct {
    } else struct {
    },
};
//--------------------------------------------------------------------------------
// Section: Imports (4)
//--------------------------------------------------------------------------------
const IInspectable = @import("win_rt.zig").IInspectable;
const HSTRING = @import("win_rt.zig").HSTRING;
const BOOL = @import("system_services.zig").BOOL;
const HRESULT = @import("com.zig").HRESULT;

test {
    // The following '_ = <FuncPtrType>' lines are a workaround for https://github.com/ziglang/zig/issues/4476
    if (@hasDecl(@This(), "GameUICompletionRoutine")) { _ = GameUICompletionRoutine; }
    if (@hasDecl(@This(), "PlayerPickerUICompletionRoutine")) { _ = PlayerPickerUICompletionRoutine; }

    @setEvalBranchQuota(
        @import("std").meta.declarations(@This()).len * 3
    );

    // reference all the pub declarations
    if (!@import("std").builtin.is_test) return;
    inline for (@import("std").meta.declarations(@This())) |decl| {
        if (decl.is_pub) {
            _ = decl;
        }
    }
}
